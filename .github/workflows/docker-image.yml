name: Docker Image CI

on:
  push:
    branches: [ "pipeline" ]
  pull_request:
    branches: [ "pipeline" ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: "Build"

    steps:
    - uses: actions/checkout@v4
    - run: |
        go build
  test:
    runs-on: ubuntu-latest
    name: "Test"
    needs: build

    steps:
      - uses: actions/checkout@v4
      - run: |
          go test -v

  publish:
    runs-on: ubuntu-latest
    name: "Build and Publish Docker Image"
    needs: test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Generate Image Tag
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Build the Docker image
      env:
        GIT_SHA: ${{ github.sha_short }}'
      run: |
        docker build . --file Dockerfile --tag seidlfs/my-hello:latest
        docker tag seidlfs/my-hello:latest seidlfs/my-hello:$GIT_SHA
    - name: Login to DockerHub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
    - name: Publish Image
      env:
        GIT_SHA: ${{ github.sha_short }}'
      run:
        docker image push seidlfs/my-hello:$GIT_SHA
        docker image push seidlfs/my-hello:latest
  trivyScan:
      name: Scan for Vulnerabilities
      runs-on: ubuntu-20.04
      needs: publish
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Build an image from Dockerfile
          run: |
            docker build -t docker.io/my-organization/my-app:${{ github.sha_short }} .
        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@0.20.0
          with:
            image-ref: 'seidlfs/my-hello:${{ github.sha_short }}'
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH'
        
        
